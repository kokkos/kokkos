name: github-Linux-hpx

on:
  push:
    branches:
      - develop
  pull_request:
    paths-ignore:
    - '**/*.md'
    types: [ opened, reopened, synchronize ]

concurrency:
  group: ${ {github.event_name }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{github.event_name == 'pull_request'}}

env:
  HPX_REF: v1.9.0

jobs:

  # The 'env' context is not available for job.container.image, so we need this job.
  set-vars:
    runs-on: [ubuntu-latest]
    outputs:
        CI_IMAGE_HPX : ${{ steps.common.outputs.CI_IMAGE_HPX }}
    steps:
        - id  : common
          run : |
              # TODO: We should determine where this image goes.
              echo "CI_IMAGE_HPX=ghcr.io/kokkos/kokkos/hpx:${{ env.HPX_REF }}" >> $GITHUB_OUTPUT

  hpx-image:
    needs: [set-vars]
    runs-on: [ubuntu-latest]
    container:
      image: docker:latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          file: scripts/docker/Dockerfile.hpx
          # Before merging this PR, revert this line to ${{ github.ref == 'refs/heads/develop' }}.
          push: true
          tags: ${{ needs.set-vars.outputs.CI_IMAGE_HPX }}
          cache-from: type=registry,ref=${{ needs.set-vars.outputs.CI_IMAGE_HPX }}
          cache-to: type=inline
          build-args: |
            HPX_REF=${{ env.HPX_REF }}
          labels: "org.opencontainers.image.source=${{ github.repositoryUrl }}"

  hpx-test:
    needs: [set-vars, hpx-image]
    runs-on: [ubuntu-latest]
    container:
      image: ${{ needs.set-vars.outputs.CI_IMAGE_HPX }}
    steps:
      - name: checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          path: kokkos

      - name: configure kokkos
        run: |
          mkdir -p kokkos/{build,install}
          cd kokkos/build
          cmake \
            -GNinja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=$PWD/../install \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_CXX_FLAGS="-Werror" \
            -DHPX_ROOT=${HPX_ROOT} \
            -DKokkos_ENABLE_COMPILER_WARNINGS=ON \
            -DKokkos_ENABLE_DEPRECATED_CODE_4=OFF \
            -DKokkos_ENABLE_EXAMPLES=ON \
            -DKokkos_ENABLE_HPX=ON \
            -DKokkos_ENABLE_SERIAL=ON \
            -DKokkos_ENABLE_TESTS=ON \
            ..

      - name: build_and_install_kokkos
        working-directory: kokkos/build
        run: ninja -j2 install

      - name: test_kokkos
        working-directory: kokkos/build
        run: ctest --timeout 2000 -j2 --output-on-failure
