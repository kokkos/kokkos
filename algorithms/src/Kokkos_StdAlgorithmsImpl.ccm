//@HEADER
// ************************************************************************
//
//                        Kokkos v. 4.0
//       Copyright (2022) National Technology & Engineering
//               Solutions of Sandia, LLC (NTESS).
//
// Under the terms of Contract DE-NA0003525 with NTESS,
// the U.S. Government retains certain rights in this software.
//
// Part of Kokkos, under the Apache License v2.0 with LLVM Exceptions.
// See https://kokkos.org/LICENSE for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//@HEADER

module;

#include <Kokkos_StdAlgorithms.hpp>

export module kokkosstdalgorithmsimpl;

export {
  namespace Kokkos::Experimental::Impl {
  using ::Kokkos::Experimental::Impl::are_iterators_v;
  using ::Kokkos::Experimental::Impl::are_random_access_iterators_v;
  using ::Kokkos::Experimental::Impl::
      ExclusiveScanDefaultFunctorWithValueWrapper;
  using ::Kokkos::Experimental::Impl::
      ExeSpaceTransformInclusiveScanNoInitValueFunctor;
  using ::Kokkos::Experimental::Impl::
      ExeSpaceTransformInclusiveScanWithInitValueFunctor;
  using ::Kokkos::Experimental::Impl::expect_no_overlap;
  using ::Kokkos::Experimental::Impl::InclusiveScanDefaultFunctor;
  using ::Kokkos::Experimental::Impl::RandomAccessIterator;
  using ::Kokkos::Experimental::Impl::StdAlgoLessThanBinaryPredicate;
  using ::Kokkos::Experimental::Impl::
      StdNumericScanIdentityReferenceUnaryFunctor;
  using ::Kokkos::Experimental::Impl::
      TransformExclusiveScanFunctorWithValueWrapper;
  using ::Kokkos::Experimental::Impl::ValueWrapperForNoNeutralElement;
  }  // namespace Kokkos::Experimental::Impl
}
