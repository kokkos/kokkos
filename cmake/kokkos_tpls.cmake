KOKKOS_CFG_DEPENDS(TPLS OPTIONS)
KOKKOS_CFG_DEPENDS(TPLS DEVICES)

FUNCTION(KOKKOS_TPL_OPTION PKG DEFAULT)
  KOKKOS_ENABLE_OPTION(${PKG} ${DEFAULT} "Whether to enable the ${PKG} library")
  KOKKOS_OPTION(${PKG}_DIR "" PATH "Location of ${PKG} library")
  SET(KOKKOS_ENABLE_${PKG} ${KOKKOS_ENABLE_${PKG}} PARENT_SCOPE)
  SET(KOKKOS_${PKG}_DIR  ${KOKKOS_${PKG}_DIR} PARENT_SCOPE)
ENDFUNCTION()

IF(Trilinos_ENABLE_Kokkos AND TPL_ENABLE_QTHREAD)             
SET(QTHR_DEFAULT ON)
ELSE()
SET(QTHR_DEFAULT OFF)
ENDIF()
KOKKOS_TPL_OPTION(QTHREAD ${QTHR_DEFAULT} 
  "Whether to build Qthreads backend - may also require -DQTHREAD_DIR")

KOKKOS_TPL_OPTION(HWLOC   Off)
KOKKOS_TPL_OPTION(LIBNUMA Off)
KOKKOS_TPL_OPTION(MEMKIND Off)
KOKKOS_TPL_OPTION(CUDA    Off)

IF(Trilinos_ENABLE_Kokkos AND TPL_ENABLE_HPX)
SET(HPX_DEFAULT ON)
ELSE()
SET(HPX_DEFAULT OFF)
ENDIF()
KOKKOS_TPL_OPTION(HPX ${HPX_DEFAULT})

IF (KOKKOS_ENABLE_HPX)
  FIND_PACKAGE(HPX REQUIRED)
#  MESSAGE(STATUS "KOKKOS_ENABLE_HPX: ${HPX_DIR}")
ENDIF()

IF (KOKKOS_ENABLE_HWLOC)
  FIND_PACKAGE(HWLOC REQUIRED MODULE)
  IF (NOT HWLOC_FOUND)
    MESSAGE(FATAL_ERROR "Unable to locate hwloc ${KOKKOS_HWLOC_DIR}")
  ENDIF()
ENDIF()

IF (KOKKOS_ENABLE_LIBNUMA)
  FIND_PACKAGE(LIBNUMA REQUIRED MODULE)
  IF (NOT LIBNUMA_FOUND)
    MESSAGE(FATAL_ERROR "Unable to locate libnuma ${KOKKOS_LIBNUMA_DIR}")
  ENDIF()
ENDIF()

IF (KOKKOS_ENABLE_LIBRT)
  FIND_PACKAGE(LIBRT REQUIRED MODULE)
  IF (NOT LIBRT_FOUND)
    MESSAGE(FATAL_ERROR "Unable to locate LIBRT ${KOKKOS_LIBRT_DIR}")
  ENDIF()
ENDIF()

FIND_PACKAGE(LIBDL REQUIRED MODULE)
IF (NOT LIBDL_FOUND)
  MESSAGE(FATAL_ERROR "Unable to locate ldl ${KOKKOS_LIBDL_DIR}")
ENDIF()

IF (KOKKOS_ENABLE_MEMKIND)
  FIND_PACKAGE(MEMKIND REQUIRED MODULE)
  IF (NOT MEMKIND_FOUND)
    MESSAGE(FATAL_ERROR "Unable to locate memkind ${KOKKOS_MEMKIND_DIR}")
  ENDIF()
ENDIF()

