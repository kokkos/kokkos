
//----------------------------------------------------------------------------
// Set the default execution space.
//
#cmakedefine KOKKOS_DEVICE_SPACE_ACTIVE
#cmakedefine KOKKOS_HOSTPARALLEL_SPACE_ACTIVE

/// Define Kokkos::DefaultExecutionSpace as per configuration option
/// or chosen from the enabled execution spaces in the following order:
/// Kokkos::Cuda, Kokkos::Experimental::OpenMPTarget, Kokkos::OpenMP,
/// Kokkos::Threads, Kokkos::Serial

namespace Kokkos {

#if defined(KOKKOS_DEVICE_SPACE_ACTIVE)
   using DefaultExecutionSpace=@_DEVICE_PARALLEL@;
   #if defined(KOKKOS_HOSTPARALLEL_SPACE_ACTIVE)
      using DefaultHostExecutionSpace=@_HOST_PARALLEL@;
   #else
      using DefaultHostExecutionSpace=Serial;
   #endif
#else
   #if defined(KOKKOS_HOSTPARALLEL_SPACE_ACTIVE)
      using DefaultExecutionSpace=@_HOST_PARALLEL@;
      using DefaultHostExecutionSpace=@_HOST_PARALLEL@;
   #else
      using DefaultHostExecutionSpace=Serial;
      using DefaultExecutionSpace=Serial;
   #endif
#endif

namespace Impl {

//----------------------------------------------------------------------------
// Detect the active execution space and define its memory space.
// This is used to verify whether a running kernel can access
// a given memory space.
#if defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_CUDA) && \
    defined(KOKKOS_ENABLE_CUDA)
typedef Kokkos::CudaSpace ActiveExecutionMemorySpace;
#elif defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HIP) && \
    defined(KOKKOS_ENABLE_HIP)
typedef Kokkos::HIPSpace ActiveExecutionMemorySpace;
#elif defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST)
typedef Kokkos::HostSpace ActiveExecutionMemorySpace;
#else
typedef void ActiveExecutionMemorySpace;
#endif


}  // namespace Impl

}  // namespace Kokkos
